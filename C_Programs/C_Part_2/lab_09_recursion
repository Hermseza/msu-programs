// AUTHOR	:  Zackary Hermsen
// DATE		:  03/12/15
// Course	:  Csci 281, Section A
// File		:  lab_09_recursion
// Goal		:  To complete Lab 9.
// Purpose	:  To use recursion effectively

#include <stdio.h>

int fact_loop(int n);
int fact_rec(int n);

int sum_formula(int n);
int sum_loop(int n);
int sum_recursion(int n);

int square_formula(int n);
int square_loop(int n);
int square_recursion(int n);

int cube_formula(int n);
int cube_loop(int n);
int cube_recursion(int n);

int main()
{
	int n;
	int result_1;
	int result_2;
	int result_3;

	//Problem 1: Factorial

	printf("\n Please enter a number : ");
	scanf_s("%d", &n);

	result_1 = fact_loop(n);

	result_2 = fact_rec(n);

	printf("\n The factorial of %d is %d, using iteration", n, result_1);
	printf("\n The factorial of %d is %d, using recursion", n, result_2);

	printf("\n");

	//Problem 2: To get the summation of the first n numbers

	printf("\n Please enter a number n, and I will tell you the sum of the first n integers : ");
	scanf_s("%d", &n);

	result_1 = sum_formula(n);
	result_2 = sum_loop(n);
	result_3 = sum_recursion(n);

	printf("\n The sum of the first %d numbers, using a Formula, is %d", n, result_1);
	printf("\n The sum of the first %d numbers, using a Loop, is %d", n, result_2);
	printf("\n The sum of the first %d numbers, using Recursion, is %d", n, result_3);

	printf("\n");

	//Problem 3: To get the summation of the first n numbers squared

	printf("\n Please enter a number n, and I will tell you the sum of the first n integers squared : ");
	scanf_s("%d", &n);

	result_1 = square_formula(n);
	result_2 = square_loop(n);
	result_3 = square_recursion(n);

	printf("\n The sum of the first %d numbers squared, using a Formula, is %d", n, result_1);
	printf("\n The sum of the first %d numbers squared, using a Loop, is %d", n, result_2);
	printf("\n The sum of the first %d numbers squared, using Recursion, is %d", n, result_3);

	printf("\n");

	//Problem 4: To get the summation of the first n numbers cubed

	printf("\n Please enter a number n, and I will tell you the sum of the first n integers cubed : ");
	scanf_s("%d", &n);
	
	result_1 = cube_formula(n);
	result_2 = cube_loop(n);
	result_3 = cube_recursion(n);

	printf("\n The sum of the first %d numbers cubed, using a Formula, is %d", n, result_1);
	printf("\n The sum of the first %d numbers cubed, using a Loop, is %d", n, result_2);
	printf("\n The sum of the first %d numbers cubed, using Recursion, is %d", n, result_3);


	getchar();
	getchar();

	return 0;
}

int fact_forumula(int n)
{
	int sum;
	sum = n * (n + 1) / 2;
	return sum;
}

int fact_loop(int n)
{
	int i;
	int f = 1;

	for(i = 1; i <= n; i++)
	{
		f = f * i;
	}

	return f;
}

int fact_rec(int n)
{
	if(n == 1)
		return 1;
	else
		return(n * fact_rec(n - 1));
}

int sum_formula(int n)
{
	int sum;
	sum = n * (n + 1) / 2;
	return sum;
}

int sum_loop(int n)
{
	int i;
	int sum = 0;
	for(i = 1; i <= n; i++)
	{
		sum += i;
	}
	return sum;
}

int sum_recursion(int n)
{
	if(n == 1)
		return 1;
	else
		return n + sum_recursion(n - 1);
}

int square_formula(int n)
{
	int sum = 0;
	sum = (n * (n + 1) * (2 * n + 1) / 6);
	return sum;
}

int square_loop(int n)
{
	int i;
	int sum = 0;
	for(i = 1; i <= n; i++)
	{
		sum += i * i;
	}
	return sum;
}

int square_recursion(int n)
{
	if( n == 1)
		return 1;
	else
		return n * n + square_recursion(n - 1);
}

int cube_formula(int n)
{
	int sum = 0;
	sum = (n * (n + 1) / 2) * (n * (n + 1) / 2);
	return sum;
}

int cube_loop(int n)
{
	int i;
	int sum = 0;
	for(i = 1; i <= n; i++)
	{
		sum += i * i * i;
	}
	return sum;
}

int cube_recursion(int n)
{
	if(n == 1)
		return 1;
	else
		return n * n * n + cube_recursion(n - 1);
}
